
//###################################################################################################################################################################
// https://nina.api.bund.dev/

// https://warnung.bund.de/bbk.mowas/gefahrendurchsagen.json           ???

//###################################################################################################################################################################
String RegionalSchluessel2GemeindeSchluessel(String rs) {
  return rs.substring(0, 5) + "0000000";  // 5+7=12
  /*
  const string regionalschuessel = "031010000000";
                      // auf Kreisebene: 0000000
                      //            012345678901
*/
}

//###################################################################################################################################################################
String RequestWarnmeldungen(String gs) {
  String res = ninaapiURL;
  res.replace("%1%", gs);
  return res;
}

//###################################################################################################################################################################
int NinaListLength = -1;
int NinaListScrollIdx;
uint8_t NinaRepaintNeededState = 2;
String* NinaList = NULL;  // new String[n];

//###################################################################################################################################################################
void Ninatesterdata() {
  NinaListLength = 5;
  NinaList = new String[NinaListLength * 3];

  for (int i = 0; i < NinaListLength; i++) {
    NinaList[i * 3 + 0] = "DWD: TEST " + String(i) + " Amtliche WARNUNG vor STURMBOEEN";
    NinaList[i * 3 + 1] = "Beginn: 2023-08-07 10:00:00";
    NinaList[i * 3 + 2] = "Ende: 2023-08-07 21:00:00";
  }
  NinaListScrollIdx = 0;
}

//###################################################################################################################################################################
void NinaWarnmeldungsDisplay(bool force = false) {
  const int x = 250;
  const int y = 0;
  int w = gfx->width() - x;
  int h = 110;

  // Keine Liste: Labyrinth darstellen
  if (NinaListLength <= 0) {
    /*
    PaintMaze(x, y, w, h);
    */
    if (NinaRepaintNeededState == 2) {
      drawPNG("/keen" + String((esp_random() % 4) + 1) + ".png", x, y);
      NinaRepaintNeededState = 0;
    }
    return;
  }

  // nur eine Meldung: nicht scrollen
  if ((NinaListLength == 1) && (!force)) {  // keine Liste
    return;
  }

  gfx->setFont(&FreeMono14pt7b);
  gfx->setTextColor(WHITE);
  gfx->fillRect(x + 1, y + 1, w - 2, h - 2, BLACK);
  gfx->drawRoundRect(x, y, w, h, 2, WHITE);

  gfx->setTextWrap(true);
  gfx->setTextBox(x + 1, y + 1, gfx->width() - 2 - x, gfx->height() - 2 - y);
  gfx->setCursor(x + 2, 20);

  if (NinaList != NULL) {
    int i = NinaListScrollIdx * 3;
    gfx->println(NinaList[i + 0]);
    gfx->println(NinaList[i + 1]);
    gfx->print(NinaList[i + 2]);

    if (NinaListLength > 1) {
      String weiter = String(NinaListScrollIdx + 1) + "/" + String(NinaListLength);
      while (weiter.length() < 9) {
        weiter = " " + weiter;
      }
      gfx->print(weiter);
    }

    if (NinaListScrollIdx < NinaListLength - 1) {
      NinaListScrollIdx++;
    } else {
      NinaListScrollIdx = 0;
    }
  } else {
    gfx->print("Keine NINA-Meldungen.");
  }

  gfx->resetTextBox();
}

//###################################################################################################################################################################
void NinaWarnmeldungsHandler() {
  String warnmeldung = FetchUrlContent(RequestWarnmeldungen(RegionalSchluessel2GemeindeSchluessel(regionalschuessel)));

  // überprüfen! https://arduinojson.org/v6/assistant/
  StaticJsonDocument<2048> doc;

  DeserializationError error = deserializeJson(doc, warnmeldung);

  // Test if parsing succeeds.
  if (error) {
    Serial.print(F("deserializeJson() failed: "));
    Serial.println(error.f_str());
    return;
  }

  Serial.print("Nina.size(): ");
  Serial.println(doc.size());

  // alte Liste weg und Liste erzeugen
  if (NinaList) {
    delete[] NinaList;
  }
  if (doc.size() == 0) {
    if (NinaRepaintNeededState == 1) {
      NinaRepaintNeededState = 2;
    }
    NinaList = NULL;
    NinaListLength = -1;
  } else {
    NinaRepaintNeededState = 1;
    NinaListLength = doc.size();
    NinaList = new String[NinaListLength * 3];

    for (int i = 0; i < doc.size(); i++) {
      String id = doc[i]["id"];
      String msg = doc[i]["i18nTitle"]["de"];
      String provider = doc[i]["payload"]["data"]["provider"];

      // begin kann null sein, z.b. bei aufhebung einer warnung
      String Beginn = doc[i]["onset"];
      String Ende = doc[i]["expires"];

      Beginn = Beginn.substring(0, 19);
      Ende = Ende.substring(0, 19);
      Beginn.replace("T", " ");
      Ende.replace("T", " ");

      NinaList[i * 3 + 0] = DeUmLaut2(provider) + ": " + DeUmLaut2(msg);
      NinaList[i * 3 + 1] = "Beginn: " + Beginn;
      NinaList[i * 3 + 2] = "Ende: " + Ende;

      /**/
      Serial.print("id: ");
      Serial.println(id);
      Serial.print("Msg: ");
      Serial.println(msg);
      Serial.print("Provider: ");
      Serial.println(provider);
      Serial.print("Beginn: ");
      Serial.println(Beginn);
      Serial.print("Ende: ");
      Serial.println(Ende);
      /**/
    }
  }
  // Ninatesterdata();
  NinaListScrollIdx = 0;
  NinaWarnmeldungsDisplay(true);
}

//

/*	

[{"id":"dwd.2.49.0.0.276.0.DWD.PVW.1691269680000.2dd77c8b-7cae-4885-9218-ad1a4ee41451.MUL","payload":
{"version":5,"type":"ALERT","id":"dwd.2.49.0.0.276.0.DWD.PVW.1691269680000.2dd77c8b-7cae-4885-9218-ad1a4ee41451.MUL",
"hash":"30b2f9d9b3220899e081d24be568c7b1895fbcb988f4f0111456a0c6cfc3c9b9","data":{"headline":"Amtliche WARNUNG vor STARKEM GEWITTER",
"provider":"DWD","severity":"Moderate","urgency":"Immediate","msgType":"Alert","area":{"type":"ZGEM","data":
"468+1,474+1,493,495+8,508+3,519,527+1,561,563+2,571,574"},"valid":true}},"i18nTitle":{"de":
"Amtliche WARNUNG vor STARKEM GEWITTER","en":"Official WARNING of HEAVY THUNDERSTORMS","ar":
"تحذير رسمي من عاصفة رعدية قوية","es":"AVISO oficial de TORMENTA FUERTE","fr":
"ALERTE officielle INTEMPÉRIES PRONONCÉES pour FORTS ORAGES","pl":
"Oficjalne OSTRZEŻENIE METEOROLOGICZNE (2. STOPNIA) przed SILNĄ BURZĄ","ru":
"Официальное предупреждение о значительных погодных явлениях: Сильная гроза","tr":
"GÜÇLÜ KÖTÜ HAVA KOŞULLARINA karşı resmi UYARI"},"sent":"2023-08-05T23:07:41+02:00",
"onset":"2023-08-05T23:08:00+02:00","expires":"2023-08-06T00:00:00+02:00","effective":"2023-08-05T23:08:00+02:00"}]



[
  {
    "id": "dwd.2.49.0.0.276.0.DWD.PVW.1691269680000.2dd77c8b-7cae-4885-9218-ad1a4ee41451.MUL",
    "payload": {
      "version": 5,
      "type": "ALERT",
      "id": "dwd.2.49.0.0.276.0.DWD.PVW.1691269680000.2dd77c8b-7cae-4885-9218-ad1a4ee41451.MUL",
      "hash": "30b2f9d9b3220899e081d24be568c7b1895fbcb988f4f0111456a0c6cfc3c9b9",
      "data": {
        "headline": "Amtliche WARNUNG vor STARKEM GEWITTER",
        "provider": "DWD",
        "severity": "Moderate",
        "urgency": "Immediate",
        "msgType": "Alert",
        "area": {
          "type": "ZGEM",
          "data": "468+1,474+1,493,495+8,508+3,519,527+1,561,563+2,571,574"
        },
        "valid": true
      }
    },
    "i18nTitle": {
      "de": "Amtliche WARNUNG vor STARKEM GEWITTER",
      "en": "Official WARNING of HEAVY THUNDERSTORMS",
      "ar": "تحذير رسمي من عاصفة رعدية قوية",
      "es": "AVISO oficial de TORMENTA FUERTE",
      "fr": "ALERTE officielle INTEMPÉRIES PRONONCÉES pour FORTS ORAGES",
      "pl": "Oficjalne OSTRZEŻENIE METEOROLOGICZNE (2. STOPNIA) przed SILNĄ BURZĄ",
      "ru": "Официальное предупреждение о значительных погодных явлениях: Сильная гроза",
      "tr": "GÜÇLÜ KÖTÜ HAVA KOŞULLARINA karşı resmi UYARI"
    },
    "sent": "2023-08-05T23:07:41+02:00",
    "onset": "2023-08-05T23:08:00+02:00",
    "expires": "2023-08-06T00:00:00+02:00",
    "effective": "2023-08-05T23:08:00+02:00"
  }
]

*/
